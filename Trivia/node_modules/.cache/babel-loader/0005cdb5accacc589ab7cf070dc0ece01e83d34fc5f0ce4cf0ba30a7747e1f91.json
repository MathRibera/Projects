{"ast":null,"code":"var _jsxFileName = \"/home/aa/\\xC1rea de Trabalho/PROJETOS/sd-027-a-project-trivia-react-redux/src/pages/Login.jsx\";\nimport PropTypes from 'prop-types';\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { getName, initialScore } from '../redux/action';\nimport { getToken } from '../services/api';\nimport styles from './css/Login.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass Login extends Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      nameInput: '',\n      emailInput: '',\n      isDisabled: true\n    };\n    this.loginValidation = () => {\n      const {\n        nameInput,\n        emailInput\n      } = this.state;\n      this.setState({\n        isDisabled: !(nameInput && emailInput)\n      });\n    };\n    this.handleChange = _ref => {\n      let {\n        target: {\n          value,\n          name\n        }\n      } = _ref;\n      this.setState({\n        [name]: value\n      }, this.loginValidation);\n    };\n    this.handleClickSettings = () => {\n      const {\n        history\n      } = this.props;\n      history.push('/config');\n    };\n    this.submitData = async () => {\n      const {\n        history,\n        dispatch\n      } = this.props;\n      const {\n        nameInput,\n        emailInput\n      } = this.state;\n      const data = await getToken();\n      dispatch(getName({\n        name: nameInput,\n        gravatarEmail: emailInput\n      }));\n      if (data.response_code === 0) {\n        history.push('/game');\n        dispatch(initialScore());\n      }\n    };\n  }\n  componentDidMount() {\n    const getRanking = localStorage.getItem('Ranking');\n    if (!getRanking) localStorage.setItem('Ranking', '[]');\n  }\n  render() {\n    const {\n      nameInput,\n      emailInput,\n      isDisabled\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.background,\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: \"./images/trivia.png\",\n        alt: \"trivia\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.container,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.inputs,\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"nameInput\",\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              \"data-testid\": \"input-player-name\",\n              placeholder: \"Digite seu nome\",\n              name: \"nameInput\",\n              onChange: this.handleChange,\n              id: \"nameInput\",\n              value: nameInput\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 62,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"emailInput\",\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"email\",\n              \"data-testid\": \"input-gravatar-email\",\n              placeholder: \"Digite seu email\",\n              name: \"emailInput\",\n              onChange: this.handleChange,\n              id: \"emailInput\",\n              value: emailInput\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 73,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.buttons,\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            \"data-testid\": \"btn-play\",\n            disabled: isDisabled,\n            onClick: this.submitData,\n            children: \"Play\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            \"data-testid\": \"btn-settings\",\n            onClick: this.handleClickSettings,\n            children: \"Settings\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this);\n  }\n}\nLogin.propTypes = {\n  dispatch: PropTypes.func,\n  history: PropTypes.shape({\n    push: PropTypes.func\n  })\n}.isRequired;\nexport default connect()(Login);","map":{"version":3,"names":["PropTypes","React","Component","connect","getName","initialScore","getToken","styles","Login","state","nameInput","emailInput","isDisabled","loginValidation","setState","handleChange","target","value","name","handleClickSettings","history","props","push","submitData","dispatch","data","gravatarEmail","response_code","componentDidMount","getRanking","localStorage","getItem","setItem","render","background","container","inputs","buttons","propTypes","func","shape","isRequired"],"sources":["/home/aa/Área de Trabalho/PROJETOS/sd-027-a-project-trivia-react-redux/src/pages/Login.jsx"],"sourcesContent":["import PropTypes from 'prop-types';\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { getName, initialScore } from '../redux/action';\nimport { getToken } from '../services/api';\nimport styles from './css/Login.module.css';\n\nclass Login extends Component {\n  state = {\n    nameInput: '',\n    emailInput: '',\n    isDisabled: true,\n  };\n\n  componentDidMount() {\n    const getRanking = localStorage.getItem('Ranking');\n    if (!getRanking) localStorage.setItem('Ranking', '[]');\n  }\n\n  loginValidation = () => {\n    const { nameInput, emailInput } = this.state;\n    this.setState({\n      isDisabled: !(nameInput && emailInput),\n    });\n  };\n\n  handleChange = ({ target: { value, name } }) => {\n    this.setState({\n      [name]: value,\n    }, this.loginValidation);\n  };\n\n  // handleClickPlay = () => {\n  //   const { nameInput, emailInput } = this.state;\n  //   const { history, dispatch } = this.props;\n  // };\n\n  handleClickSettings = () => {\n    const { history } = this.props;\n    history.push('/config');\n  };\n\n  submitData = async () => {\n    const { history, dispatch } = this.props;\n    const { nameInput, emailInput } = this.state;\n    const data = await getToken();\n    dispatch(getName({ name: nameInput, gravatarEmail: emailInput }));\n    if (data.response_code === 0) {\n      history.push('/game');\n      dispatch(initialScore());\n    }\n  };\n\n  render() {\n    const { nameInput, emailInput, isDisabled } = this.state;\n    return (\n      <div className={ styles.background }>\n        <img src=\"./images/trivia.png\" alt=\"trivia\" />\n        <div className={ styles.container }>\n          <div className={ styles.inputs }>\n            <label htmlFor=\"nameInput\">\n              <input\n                type=\"text\"\n                data-testid=\"input-player-name\"\n                placeholder=\"Digite seu nome\"\n                name=\"nameInput\"\n                onChange={ this.handleChange }\n                id=\"nameInput\"\n                value={ nameInput }\n              />\n            </label>\n            <label htmlFor=\"emailInput\">\n              <input\n                type=\"email\"\n                data-testid=\"input-gravatar-email\"\n                placeholder=\"Digite seu email\"\n                name=\"emailInput\"\n                onChange={ this.handleChange }\n                id=\"emailInput\"\n                value={ emailInput }\n              />\n            </label>\n\n          </div>\n          <div className={ styles.buttons }>\n            <button\n              type=\"button\"\n              data-testid=\"btn-play\"\n              disabled={ isDisabled }\n              onClick={ this.submitData }\n            >\n              Play\n            </button>\n\n            <button\n              type=\"button\"\n              data-testid=\"btn-settings\"\n              onClick={ this.handleClickSettings }\n            >\n              Settings\n            </button>\n          </div>\n\n        </div>\n      </div>\n    );\n  }\n}\n\nLogin.propTypes = {\n  dispatch: PropTypes.func,\n  history: PropTypes.shape({\n    push: PropTypes.func,\n  }),\n}.isRequired;\n\nexport default connect()(Login);\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}