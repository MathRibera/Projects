{"ast":null,"code":"var _jsxFileName = \"/home/aa/\\xC1rea de Trabalho/PROJETOS/sd-027-a-project-trivia-react-redux/src/pages/Game.jsx\";\nimport PropTypes from 'prop-types';\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport Header from '../components/Header';\nimport { getAssertions, getScore } from '../redux/action';\nimport './cssss.css';\nimport styles from './css/Game.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst initial = 'correct-answer';\nclass Game extends Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      questions: [],\n      indice: 0,\n      answers: [],\n      correctAnswer: '',\n      enable: false,\n      seconds: 30,\n      disableButton: false,\n      scores: 0,\n      buttonNext: false,\n      perguntaNumber: 0,\n      assertions: 0\n    };\n    this.startTime = () => {\n      const timeNumber = 1000;\n      this.intervalId = setInterval(() => {\n        this.setState(_ref => {\n          let {\n            seconds\n          } = _ref;\n          if (seconds === 0) {\n            clearInterval(this.intervalId);\n            this.setState({\n              disableButton: true,\n              buttonNext: true\n            });\n            return {};\n          }\n          return {\n            seconds: seconds - 1\n          };\n        });\n      }, timeNumber);\n    };\n    this.createAnswers = () => {\n      const {\n        questions,\n        indice\n      } = this.state;\n      const correctAnswer = questions[indice].correct_answer;\n      const incorrectAnswers = questions[indice].incorrect_answers;\n      const allAnswers = [correctAnswer];\n      allAnswers.push(...incorrectAnswers);\n      const answers = [];\n      const count = allAnswers.length;\n      for (let index = 0; index < count; index += 1) {\n        const random = Math.floor(Math.random() * allAnswers.length);\n        answers.push(allAnswers[random]);\n        allAnswers.splice(random, 1);\n      }\n      this.setState({\n        answers,\n        correctAnswer\n      });\n    };\n    this.changeIndiceState = () => {\n      clearInterval(this.intervalId);\n      this.setState(prev => ({\n        indice: prev.indice + 1,\n        enable: false,\n        seconds: 30,\n        perguntaNumber: prev.perguntaNumber + 1\n      }), this.createAnswers);\n      this.startTime();\n      const {\n        perguntaNumber\n      } = this.state;\n      const {\n        history,\n        dispatch,\n        player\n      } = this.props;\n      const number = 4;\n      if (perguntaNumber === number) {\n        const {\n          assertions\n        } = this.state;\n        dispatch(getAssertions(assertions));\n        const recoverRanking = JSON.parse(localStorage.getItem('Ranking'));\n        localStorage.setItem('Ranking', JSON.stringify([...recoverRanking, player]));\n        return history.push('/feedback');\n      }\n    };\n    this.score = target => {\n      const {\n        seconds\n      } = this.state;\n      const difficultsPoints = {\n        easy: 1,\n        medium: 2,\n        hard: 3\n      };\n      if (target.dataset.testid === initial) {\n        const initialNumber = 10;\n        const valueScore = initialNumber + difficultsPoints[target.value] * seconds;\n        this.setState(prev => ({\n          scores: prev.scores + valueScore,\n          assertions: prev.assertions + 1\n        }), () => {\n          const {\n            scores\n          } = this.state;\n          const {\n            dispatch\n          } = this.props;\n          this.setState({\n            buttonNext: true\n          });\n          dispatch(getScore(scores));\n        });\n      }\n    };\n    this.addID = () => {\n      clearInterval(this.intervalId);\n      this.setState({\n        enable: true\n      });\n    };\n  }\n  async componentDidMount() {\n    const {\n      history\n    } = this.props;\n    const token = localStorage.getItem('token');\n    const data = await (await fetch(`https://opentdb.com/api.php?amount=5&token=${token}`)).json();\n    const three = 3;\n    // FALTA TESTAR\n    if (data.response_code === three) {\n      localStorage.removeItem('token');\n      history.push('/');\n      return;\n    }\n    this.startTime();\n    const {\n      player\n    } = this.props;\n    const {\n      score\n    } = player;\n    this.setState({\n      questions: data.results,\n      scores: score\n    }, this.createAnswers);\n  }\n  componentWillUnmount() {\n    clearInterval(this.intervalId);\n  }\n\n  // FALTA TESTAR\n\n  render() {\n    var _questions$indice;\n    const {\n      questions,\n      indice,\n      buttonNext\n    } = this.state;\n    const {\n      answers,\n      correctAnswer,\n      enable,\n      seconds,\n      disableButton\n    } = this.state;\n    if (!((_questions$indice = questions[indice]) !== null && _questions$indice !== void 0 && _questions$indice.question)) return /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Carregando\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 46\n    }, this);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.header,\n        children: /*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.questions,\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          \"data-testid\": \"question-category\",\n          children: questions[indice].category\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          \"data-testid\": \"question-text\",\n          children: questions[indice].question\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        \"data-testid\": \"answer-options\",\n        children: [answers.map((answer, index) => /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          disabled: disableButton,\n          value: questions[indice].difficulty,\n          className: (enable && (correctAnswer === answer ? `${initial}` : 'wrong-answer')).toString(),\n          onClick: _ref2 => {\n            let {\n              target\n            } = _ref2;\n            this.addID();\n            this.score(target);\n            this.setState({\n              buttonNext: true\n            });\n            this.setState({\n              disableButton: true\n            });\n          },\n          \"data-testid\": correctAnswer === answer ? `${initial}` : `wrong-answer-${index}`,\n          children: answer\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 13\n        }, this)), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 181,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: `${seconds} segundos restantes`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 182,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 183,\n          columnNumber: 11\n        }, this), buttonNext && /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => {\n            this.changeIndiceState();\n            this.setState({\n              disableButton: false,\n              buttonNext: false\n            });\n          },\n          \"data-testid\": \"btn-next\",\n          children: \"Next\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 185,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 7\n    }, this);\n  }\n}\nconst mapStateToProps = state => ({\n  ...state\n});\nGame.propTypes = {\n  history: PropTypes.shape({\n    push: PropTypes.func\n  })\n}.isRequired;\nexport default connect(mapStateToProps)(Game);","map":{"version":3,"names":["PropTypes","React","Component","connect","Header","getAssertions","getScore","styles","initial","Game","state","questions","indice","answers","correctAnswer","enable","seconds","disableButton","scores","buttonNext","perguntaNumber","assertions","startTime","timeNumber","intervalId","setInterval","setState","clearInterval","createAnswers","correct_answer","incorrectAnswers","incorrect_answers","allAnswers","push","count","length","index","random","Math","floor","splice","changeIndiceState","prev","history","dispatch","player","props","number","recoverRanking","JSON","parse","localStorage","getItem","setItem","stringify","score","target","difficultsPoints","easy","medium","hard","dataset","testid","initialNumber","valueScore","value","addID","componentDidMount","token","data","fetch","json","three","response_code","removeItem","results","componentWillUnmount","render","question","header","category","map","answer","difficulty","toString","mapStateToProps","propTypes","shape","func","isRequired"],"sources":["/home/aa/√Årea de Trabalho/PROJETOS/sd-027-a-project-trivia-react-redux/src/pages/Game.jsx"],"sourcesContent":["import PropTypes from 'prop-types';\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport Header from '../components/Header';\nimport { getAssertions, getScore } from '../redux/action';\nimport './cssss.css';\nimport styles from './css/Game.module.css';\n\nconst initial = 'correct-answer';\nclass Game extends Component {\n  state = {\n    questions: [],\n    indice: 0,\n    answers: [],\n    correctAnswer: '',\n    enable: false,\n    seconds: 30,\n    disableButton: false,\n    scores: 0,\n    buttonNext: false,\n    perguntaNumber: 0,\n    assertions: 0,\n  };\n\n  async componentDidMount() {\n    const { history } = this.props;\n    const token = localStorage.getItem('token');\n    const data = await (\n      await fetch(`https://opentdb.com/api.php?amount=5&token=${token}`)\n    ).json();\n    const three = 3;\n    // FALTA TESTAR\n    if (data.response_code === three) {\n      localStorage.removeItem('token');\n      history.push('/');\n      return;\n    }\n    this.startTime();\n    const { player } = this.props;\n    const { score } = player;\n    this.setState(\n      { questions: data.results, scores: score },\n      this.createAnswers,\n    );\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.intervalId);\n  }\n\n  // FALTA TESTAR\n  startTime = () => {\n    const timeNumber = 1000;\n    this.intervalId = setInterval(() => {\n      this.setState(({ seconds }) => {\n        if (seconds === 0) {\n          clearInterval(this.intervalId);\n          this.setState({ disableButton: true, buttonNext: true });\n          return {};\n        }\n\n        return {\n          seconds: seconds - 1,\n        };\n      });\n    }, timeNumber);\n  };\n\n  createAnswers = () => {\n    const { questions, indice } = this.state;\n    const correctAnswer = questions[indice].correct_answer;\n    const incorrectAnswers = questions[indice].incorrect_answers;\n    const allAnswers = [correctAnswer];\n    allAnswers.push(...incorrectAnswers);\n    const answers = [];\n    const count = allAnswers.length;\n    for (let index = 0; index < count; index += 1) {\n      const random = Math.floor(Math.random() * allAnswers.length);\n      answers.push(allAnswers[random]);\n      allAnswers.splice(random, 1);\n    }\n    this.setState({ answers, correctAnswer });\n  };\n\n  // Clique no botao next\n  changeIndiceState = () => {\n    clearInterval(this.intervalId);\n    this.setState(\n      (prev) => ({ indice: prev.indice + 1,\n        enable: false,\n        seconds: 30,\n        perguntaNumber: prev.perguntaNumber + 1 }),\n      this.createAnswers,\n    );\n    this.startTime();\n    const { perguntaNumber } = this.state;\n    const { history, dispatch, player } = this.props;\n    const number = 4;\n    if (perguntaNumber === number) {\n      const { assertions } = this.state;\n      dispatch(getAssertions(assertions));\n      const recoverRanking = JSON.parse(localStorage.getItem('Ranking'));\n      localStorage.setItem('Ranking', JSON\n        .stringify([...recoverRanking, player]));\n      return history.push('/feedback');\n    }\n  };\n\n  score = (target) => {\n    const { seconds } = this.state;\n    const difficultsPoints = {\n      easy: 1,\n      medium: 2,\n      hard: 3,\n    };\n\n    if (target.dataset.testid === initial) {\n      const initialNumber = 10;\n      const valueScore = initialNumber + (difficultsPoints[target.value] * seconds);\n      this.setState(\n        (prev) => ({ scores: prev.scores + valueScore, assertions: prev.assertions + 1 }),\n        () => {\n          const { scores } = this.state;\n          const { dispatch } = this.props;\n          this.setState({ buttonNext: true });\n          dispatch(getScore(scores));\n        },\n      );\n    }\n  };\n\n  // clique no botao de respostas\n  addID = () => {\n    clearInterval(this.intervalId);\n    this.setState({ enable: true });\n  };\n\n  render() {\n    const { questions, indice, buttonNext } = this.state;\n    const { answers, correctAnswer, enable, seconds, disableButton } = this.state;\n    if (!questions[indice]?.question) return <h1>Carregando</h1>;\n    return (\n      <div>\n        <div className={ styles.header }>\n          <Header />\n        </div>\n        <div className={ styles.questions }>\n          <h2 data-testid=\"question-category\">{questions[indice].category}</h2>\n          <h3 data-testid=\"question-text\">{questions[indice].question}</h3>\n        </div>\n        <div data-testid=\"answer-options\">\n          {answers.map((answer, index) => (\n            <button\n              key={ index }\n              type=\"button\"\n              disabled={ disableButton }\n              value={ questions[indice].difficulty }\n              className={\n                (\n                  enable\n                  && (correctAnswer === answer\n                    ? `${initial}`\n                    : 'wrong-answer')\n                ).toString()\n              }\n              onClick={ ({ target }) => {\n                this.addID();\n                this.score(target);\n                this.setState({ buttonNext: true });\n                this.setState({ disableButton: true });\n              } }\n              data-testid={\n                correctAnswer === answer\n                  ? `${initial}`\n                  : `wrong-answer-${index}`\n              }\n            >\n              {answer}\n            </button>\n          ))}\n          <br />\n          <div>{`${seconds} segundos restantes`}</div>\n          <br />\n          {buttonNext && (\n            <button\n              onClick={ () => {\n                this.changeIndiceState();\n                this.setState({ disableButton: false, buttonNext: false });\n              } }\n              data-testid=\"btn-next\"\n            >\n              Next\n            </button>\n          )}\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({ ...state });\n\nGame.propTypes = {\n  history: PropTypes.shape({\n    push: PropTypes.func,\n  }),\n}.isRequired;\n\nexport default connect(mapStateToProps)(Game);\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}